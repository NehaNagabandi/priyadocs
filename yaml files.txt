yaml is human readable language used for file co/storenfiguration and data transfer
--------------------------------------------------------------
Ansible:(for creation of playbook)
su - ansible(change to ansible)
vi playbook.yaml 
---
- name: My First playbook
  hosts: all
  become: yes
  tasks:
  - name: install git
    package:
     name: git
     state: present

ansible-playbook <playbook name>
------------------------------------------------------------
---
- hosts: all
  become: yes
  tasks:
    - name: install httpd Task 1
      yum: 
        name: httpd
        state: present
      notify:
        - restart and enable httpd
      when: ansible_facts['os_family'] == "RedHat"
    - name: install php modules Task 2
      yum:
        name: "{{ item }}"
        state: present
      loop:
        - php
        - php-mysqlnd
      notify:
        - restart and enable httpd
      when: ansible_facts['os_family'] == "RedHat"
    - name: install apache2 and update packages Task 3
      apt:
        name: apache2
        update_cache: yes
        state: present
      notify:
        - restart and enable apache2
      when: ansible_facts['os_family'] == "Debian"
    - name: install php modules Task 4
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - php
        - libapache2-mod-php
        - php-mysql
        - php-cli
      notify:
        - restart and enable apache2
      when: ansible_facts['os_family'] == "Debian"
  handlers:
    - name: restart and enable httpd
      service:
        name: httpd
        enabled: yes
        state: restarted
    - name: restart and enable apache2
      service:
        name: apache2
        enabled: yes
        state: restarted
---------------------------------------------------------------
---
  - hosts: localhost
    become: yes
    tasks:
    - name: install nano on Redhat server
      yum:
       name: nano
       state: present
      tags:
      - install
    - name: print free memory
      debug:
       msg: "free memory is {{ansible_memory_mb.real.free}}"
      tags:
      - debug

----------------------------------------------------------------
---
  - hosts: 172.31.81.35
    become: yes
    tasks:
    - name: install tree on debian server
      apt:
       name: tree
       state: present
      tags:
      - install
---------------------------------------------------------------
modules in ansible:
yum
apt
command
file(change the ownership in file path)
---------------------------------------------------------------
---
- hosts: 172.31.81.35
  become: yes
  tasks:
  - name: Install Java 1.8
    apt: name=default-jre state=present
    when: ansible_facts['os_family'] == "RedHat"

  - name: Download Tomcat
    get_url: url=https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.65/bin/apache-tomcat-9.0.65.tar.gz dest=/opt

  - name: Extract archive
    command: chdir=/opt tar xvf apache-tomcat-9.0.65.tar.gz

  - name: Change ownership of Tomcat installation
    file: path=/opt/apache-tomcat-9.0.65 owner=ansible group=ansible state=directory recurse=yes mode=0770

  - name: Start Tomcat
    command: "nohup /opt/apache-tomcat-9.0.65/bin/startup.sh"

-------------------------------------------------------------


- name: This is a test playbook to check error handling
   hosts: localhost
   tasks:	
- name: Create user1
	  user:
		name: user1
		state: present
	  ignore_errors: yes
- name: Create user2
	  user:
		name: user2
		state: present
-------------------------------------------------------------
---
  - hosts: all
    become: yes
    roles:
    - role: ordidaad.jenkins
--------------------------------------------------------------
configure instance:(ubuntu)

#!/bin/sh
sudo apt update
sudo apt install openjdk-8-jdk
wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -
sudo sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
sudo apt update
sudo apt install jenkins